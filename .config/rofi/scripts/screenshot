#!/usr/bin/env bash

set -x
# Notify and view screenshot
notify_view() {
	dunstify -u low --replace=699 -i "$icon1 Copied to clipboard." "$dir/$file"
	if [[ -e "$dir/$file" ]]; then
		dunstify -u low --replace=699 -i "$icon1" "Screenshot Saved."
	else
		dunstify -u low --replace=699 -i "$icon1" "Screenshot Deleted."
	fi
}

# countdown
countdown() {
	for sec in $(seq "$1" -1 1); do
		dunstify -t 1000 --replace=699 -i "$icon2" "Taking shot in : $sec"
		sleep 1
	done
}

getgeometry() {
	if [[ ${XDG_CURRENT_DESKTOP} = "Hyprland" ]]; then
		hyprctl -j monitors |
			jq -r "\"\(.[$1].x),\(.[$1].y) \(.[$1].width)x\(.[$1].height)\""
	elif [[ ${XDG_CURRENT_DESKTOP} = "sway" ]]; then
		swaymsg -t get_outputs |
			jq -r ".[] | select(.focused) | .current_mode | .rect | \"\(.x),\(.y) \(.width)x\(.height)"\"
	fi
}

getres() {
	if [[ ${XDG_CURRENT_DESKTOP} = "Hyprland" ]]; then
		hyprctl -j monitors |
			jq -r "\"\(.[$1].width)x\(.[$1].height)\""
	elif [[ ${XDG_CURRENT_DESKTOP} = "sway" ]]; then
		swaymsg -t get_outputs |
			jq -r ".[] | select(.focused) | .current_mode | .rect | \"\(.width)x\(.height)\""
	fi
}

# take shots
shotnow() {
	sleep 0.5 &&
		cd "$dir" &&
		getgeometry "$1" | grim -g - - | tee "$file" | wl-copy --type image/png
	notify_view
}

delayshot() {
	countdown "$2"
	sleep 1 &&
		cd "$dir" &&
		getgeometry "$1" | grim -g - - | tee "$file" | wl-copy --type image/png
	notify_view
}

getpos() {
	if [[ ${XDG_CURRENT_DESKTOP} = "sway" ]]; then
		swaymsg -t get_tree |
			jq -r '.. | select(.pid? and .visible?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"'
	elif [[ ${XDG_CURRENT_DESKTOP} = "Hyprland" ]]; then
		hyprctl -j activewindow |
			jq -r '"\(.at[0]),\(.at[1]) \(.size[0])x\(.size[1])"'
	fi
}

shotwin() {
	sleep 0.5 &&
		cd "$dir" &&
		getpos |
			grim -g - - |
			tee "$file" |
			wl-copy --type image/png
	notify_view
}

shotarea() {
	cd "$dir" && slurp | grim -g - - | tee "$file" | wl-copy --type image/png
	notify_view
}

rofi_command="rofi -theme $HOME/.config/rofi/config/screenshot.rasi"

time=$(date +%Y-%m-%d-%I-%M-%S)
dir="$(xdg-user-dir PICTURES)/Screenshots"

# Icons
icon1="$HOME/.config/dunst/icons/collections.svg"
icon2="$HOME/.config/dunst/icons/timer.svg"

monitorid="0"
geometry="$(getres "$monitorid")"
file="Screenshot_${time}_${geometry}.png"

# Buttons
layout=$(grep 'BUTTON' "$HOME/.config/rofi/config/screenshot.rasi" | cut -d'=' -f2 | tr -d '[:blank:],*/')
if [[ "$layout" == "TRUE" ]]; then
	screen1=""
	screen2=""
	area=""
	window=""
	infive1=""
	infive2=""
	inten1=""
	inten2=""
else
	screen1=" Capture Desktop 1"
	screen2=" Capture Desktop 2"
	area=" Capture Area"
	window=" Capture Window"
	infive1=" Take in 3s (Desktop 1)"
	infive2=" Take in 3s (Desktop 2)"
	inten1=" Take in 10s (Desktop 1)"
	inten2=" Take in 10s (Desktop 2)"
fi

if [[ ! -d "$dir" ]]; then
	mkdir -p "$dir"
fi

# Variable passed to rofi
options="$screen1\n$screen2\n$area\n$window\n$infive1\n$infive2\n$inten1\n$inten2"

chosen="$(echo -e "$options" | $rofi_command -p 'Take A Shot' -dmenu -selected-row 0)"
case $chosen in
	"$screen1" | "$screen2")
		if [[ "$chosen" = "$screen1" ]]; then
			monitorid="0"
		elif [[ "$chosen" = "$screen2" ]]; then
			monitorid="1"
		fi
		geometry="$(getres "$monitorid")"
		file="Screenshot_${time}_${geometry}.png"
		shotnow "$monitorid"
		;;
	"$area")
		shotarea
		;;
	"$window")
		shotwin
		;;
	"$infive1" | "$infive2")
		if [[ "$chosen" = "$infive1" ]]; then
			monitorid="0"
		elif [[ "$chosen" = "$infive2" ]]; then
			monitorid=1
		fi
		geometry="$(getres "$monitorid")"
		file="Screenshot_${time}_${geometry}.png"
		delayshot "$monitorid" 5
		;;
	"$inten1" | "$inten2")
		if [[ "$chosen" = "$inten1" ]]; then
			monitorid="0"
		elif [[ "$chosen" = "$inten2" ]]; then
			monitorid=1
		fi
		geometry="$(getres "$monitorid")"
		file="Screenshot_${time}_${geometry}.png"
		delayshot "$monitorid" 10
		;;
esac
