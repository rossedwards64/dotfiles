# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

format = "$battery$directory$all $character"

# Wait 10 milliseconds for starship to check files under the current directory.
scan_timeout = 30

# Disable the blank line at the start of the prompt
add_newline = false

continuation_prompt = " "

[line_break]
disabled = true

[jobs]
format = "[$symbol $number]($style)"
number_threshold = 1

[os]
disabled = true

[os.symbols]
Arch = "󰣇 "
Gentoo = "󰣨 "

[shell]
disabled = true

# Replace the "❯" symbol in the prompt with "➜"
[character] # The name of the module we are configuring is "character"
success_symbol = "[➜](bold green) " # The "success_symbol" segment is being set to "➜" with the color "bold green"
error_symbol = "[➜](bold red) "

[battery]
full_symbol = "🔋 "
charging_symbol = "🔌 "
discharging_symbol = "⚡ "

[[battery.display]]
threshold = 30
style = "bold red"

[cmake]
format = '\[[$symbol($version)]($style)\]'

[cmd_duration]
format = '\[[⏱ $duration]($style)\]'
min_time = 5

[cobol]
format = '\[[$symbol($version)]($style)\]'

[crystal]
format = '\[[$symbol($version)]($style)\]'

[daml]
format = '\[[$symbol($version)]($style)\]'

[deno]
format = '\[[$symbol($version)]($style)\]'

[dotnet]
format = '\[[$symbol($version)(🎯 $tfm)]($style)\]'

[erlang]
format = '\[[$symbol($version)]($style)\]'

[gcloud]
format = '\[[$symbol$account(@$domain)(\($region\))]($style)\]'

[git_status]
conflicted = "!="
format = '([\[$all_status$ahead_behind\]]($style))'

[git_branch]
symbol = " "
format = '\[[$symbol$branch]($style)\]'

[git_commit]
only_detached = true

[git_state]

[git_metrics]
disabled = false
format = '\[([+$added]($added_style))/([-$deleted]($deleted_style))\]'

[helm]
format = '\[[$symbol($version)]($style)\]'

[kotlin]
format = '\[[$symbol($version)]($style)\]'

[kubernetes]
format = '\[[$symbol$context( \($namespace\))]($style)\]'

[lua]
format = '\[[$symbol($version)]($style)\]'

[ocaml]
format = '\[[$symbol($version)(\($switch_indicator$switch_name\))]($style)\]'

[openstack]
format = '\[[$symbol$cloud(\($project\))]($style)\]'

[perl]
format = '\[[$symbol($version)]($style)\]'

[php]
format = '\[[$symbol($version)]($style)\]'

[pulumi]
format = '\[[$symbol$stack]($style)\]'

[purescript]
format = '\[[$symbol($version)]($style)\]'

[raku]
format = '\[[$symbol($version-$vm_version)]($style)\]'

[red]
format = '\[[$symbol($version)]($style)\]'

[ruby]
format = '\[[$symbol($version)]($style)\]'

[scala]
format = '\[[$symbol($version)]($style)\]'

[sudo]
format = '\[[as $symbol]\]'

[swift]
format = '\[[$symbol($version)]($style)\]'

[terraform]
format = '\[[$symbol$workspace]($style)\]'

[time]
format = '\[[$time]($style)\]'

[username]
format = '\[[$user]($style)\]'
show_always = true

[vagrant]
format = '\[[$symbol($version)]($style)\]'

[vlang]
format = '\[[$symbol($version)]($style)\]'

[zig]
format = '\[[$symbol($version)]($style)\]'

[aws]
symbol = "  "
format = '\[[$symbol($profile)(\($region\))(\[$duration\])]($style)\]'

[buf]
symbol = " "

[c]
symbol = " "
detect_extensions = ["c", "h", "cpp", "hpp"]
format = '\[[$symbol($version(-$name))]($style)\]'

[conda]
symbol = " "
format = '\[[$symbol$environment]($style)\]'

[dart]
symbol = " "
format = '\[[$symbol($version)]($style)\]'

[directory]
truncation_length = 8
truncation_symbol = ".../"

[docker_context]
symbol = " "
format = '\[[$symbol$context]($style)\]'

[elixir]
symbol = " "
format = '\[[$symbol($version \(OTP $otp_version\))]($style)\]'

[elm]
symbol = " "
format = '\[[$symbol($version)]($style)\]'

[golang]
symbol = " "
format = '\[[$symbol($version)]($style)\]'

[haskell]
symbol = " "
format = '\[[$symbol($version)]($style)\]'

[hg_branch]
symbol = " "
format = '\[[$symbol$branch]($style)\]'

[java]
symbol = " "
format = '\[[$symbol($version)]($style)\]'

[julia]
symbol = " "
format = '\[[$symbol($version)]($style)\]'

[memory_usage]
symbol = "󰍛 "
format = '\[$symbol[$ram( | $swap)]($style)\]'

[nim]
symbol = ""
format = '\[[$symbol($version)]($style)\]'

[nix_shell]
symbol = " "
format = '\[[$symbol$state( \($name\))]($style)\]'

[nodejs]
symbol = " "
format = '\[[$symbol($version)]($style)\]'

[package]
symbol = " "
format = '\[[$symbol$version]($style)\]'

[python]
symbol = " "
format = '\[[${symbol}${pyenv_prefix}(${version})(\($virtualenv\))]($style)\]'

[spack]
symbol = "🅢 "
format = '\[[$symbol$environment]($style)\]'

[rust]
symbol = " "
format = '\[[$symbol($version)]($style)\]'
