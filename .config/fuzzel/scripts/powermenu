#!/usr/bin/env bash

set -eou pipefail

uptime="$(uptime -p | sed -e 's/up //g')"

shutdown="󰐥 Shutdown"
reboot="󰜉 Restart"
lock="󰌾 Lock"
suspend="󰒲 Sleep"
logout="󰩈 Logout"

rdialog() {
	fuzzel -l1 -p "Are you sure?: " --dmenu
}

options="$lock\n$suspend\n$logout\n$reboot\n$shutdown"
lines="$(echo -e "$options" | awk 'END{print NR}')"
chosen="$(echo -e "$options" | fuzzel --password="" -p "UPTIME: $uptime" --dmenu -l "$lines" -w 40)"

case $chosen in
"$shutdown")
	ans=$(rdialog &)
	if [[ $ans == "yes" ]] || [[ $ans == "YES" ]] || [[ $ans == "y" ]]; then
		loginctl poweroff
	elif [[ $ans == "no" ]] || [[ $ans == "NO" ]] || [[ $ans == "n" ]]; then
		exit
	fi
	;;
"$reboot")
	ans=$(rdialog &)
	if [[ $ans == "yes" ]] || [[ $ans == "YES" ]] || [[ $ans == "y" ]]; then
		loginctl reboot
	elif [[ $ans == "no" ]] || [[ $ans == "NO" ]] || [[ $ans == "n" ]]; then
		exit
	fi
	;;
"$lock")
	swaylock
	;;
"$suspend")
	ans=$(rdialog &)
	if [[ $ans == "yes" ]] || [[ $ans == "YES" ]] || [[ $ans == "y" ]]; then
		playerctl pause
		loginctl suspend
	elif [[ $ans == "no" ]] || [[ $ans == "NO" ]] || [[ $ans == "n" ]]; then
		exit
	fi
	;;
"$logout")
	ans=$(rdialog &)
	if [[ $ans == "yes" ]] || [[ $ans == "YES" ]] || [[ $ans == "y" ]]; then
		killall -u "$USER"
	elif [[ $ans == "no" ]] || [[ $ans == "NO" ]] || [[ $ans == "n" ]]; then
		exit
	fi
	;;
esac
